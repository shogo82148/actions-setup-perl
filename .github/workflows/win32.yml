name: build on windows

on:
  pull_request:
    paths:
      - 'scripts/windows/**'
      - '.github/workflows/win32.yml'
  push:
    branches:
      - 'releases/*'

jobs:
  build:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        perl:
        - "5.30.1"
        - "5.30.0"
        - "5.28.2"
        - "5.28.1"
        - "5.28.0"
        - "5.26.3"
        - "5.26.2"
        - "5.26.1"
        - "5.26.0"
        - "5.24.4"
        - "5.24.3"
        - "5.24.2"
        - "5.24.1"
        - "5.24.0"
        - "5.22.4"
        - "5.22.3"
        - "5.22.2"
        - "5.22.1"
        - "5.22.0"

        # - "5.21.11"
        # - "5.21.10"
        # #- "5.21.9" # failed with Devel-PatchPerl-1.80
        # - "5.21.8"
        # - "5.21.7"
        # - "5.21.6"
        # - "5.21.5"
        # - "5.21.4"
        # - "5.21.3"
        # - "5.21.2"
        # - "5.21.1"
        # - "5.21.0"

        - "5.20.3"
        - "5.20.2"
        - "5.20.1"
        - "5.20.0"

        # - "5.18.4"
        # - "5.18.3"
        # - "5.18.2"
        # - "5.18.1"
        # - "5.18.0"
        # - "5.16.3"
        # - "5.16.2"
        # - "5.16.1"
        # - "5.16.0"
        # - "5.14.4"
        # - "5.14.3"
        # - "5.14.2"
        # - "5.14.1"
        # - "5.14.0"
        # - "5.12.5"
        # - "5.12.4"
        # - "5.12.3"
        # - "5.12.2"
        # - "5.12.1"
        # - "5.12.0"
        # - "5.10.1"
        # - "5.10.1"
        # - "5.10.0"
        # - "5.8.9"
        # - "5.8.8"
        # - "5.8.7"
        # - "5.8.6"
        # - "5.8.5"
    steps:
      - uses: actions/checkout@v1
      - name: setup host perl
        shell: bash
        run: |
          echo "::add-path::C:\strawberry\c\bin;C:\strawberry\perl\site\bin;C:\strawberry\perl\bin"
      - name: Host perl -V
        run: perl -V
      - name: gcc --version
        run: gcc --version

      - uses: actions/cache@v1
        with:
          path: scripts/windows/local
          key: ${{ runner.os }}-build-${{ hashFiles('scripts/linux/cpanfile.snapshot') }}
      - name: carton install
        shell: cmd
        run: ../../bin/carton install
        working-directory: ./scripts/windows

      - name: build
        shell: cmd
        run: perl build.pl
        env:
          PERL_VERSION: ${{ matrix.perl }}
          PERL5LIB: ${{ github.workspace }}/scripts/windows/local/lib/perl5
          # PERL_DL_DEBUG: "10" # enables debugging
        working-directory: ./scripts/windows

      # for debugging
      # - uses: actions/upload-artifact@v1
      #   with:
      #     name: perl-${{ matrix.perl }}
      #     path: C:\hostedtoolcache\windows\perl\${{ matrix.perl }}\x64

      - name: upload
        shell: pwsh
        if: startsWith(github.ref, 'refs/heads/releases/')
        run: |
          Set-Location ${env:RUNNER_TEMP}
          Invoke-WebRequest -Uri https://github.com/shogo82148/s3cli-mini/releases/download/v0.0.2/s3cli-mini_windows_amd64.zip -OutFile s3cli-mini.zip
          7z x s3cli-mini.zip
          $pkg = Get-Content "${env:GITHUB_WORKSPACE}/package.json" -Encoding UTF8 -Raw | ConvertFrom-Json
          $version = $pkg.version
          s3cli-mini_windows_amd64/s3cli-mini --region us-east-1 cp --acl public-read perl.zip "s3://shogo82148-actions-setup-perl/v$version/perl-${env:PERL_VERSION}-win32-x64.tar.gz"
        env:
          PERL_VERSION: ${{ matrix.perl }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
