name: CPAN installer
on:
  pull_request:
    paths:
      - ".github/workflows/test-cpan-installer.yml"
      - "bin/cpanm"
      - "bin/cpm"
      - "bin/carton"
      - "__test__/**"
      - "src/**"
      - "package.json"
      - "package-lock.json"
      - "action.yml"
  push:
    branches:
      - "main"
  workflow_dispatch:

jobs:
  installer:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        installer:
          - cpanm
          - cpm
          - carton
        perl:
          - "5.40" # latest version of Perl 5
          - "5.6"
        distribution:
          - "default"
        include:
          - perl: "5.40"
            os: "windows-latest"
            installer: "cpanm"
            distribution: "strawberry"
          - perl: "5.40"
            os: "windows-latest"
            installer: "cpm"
            distribution: "strawberry"
          - perl: "5.40"
            os: "windows-latest"
            installer: "carton"
            distribution: "strawberry"
          - perl: "5.6"
            os: "windows-latest"
            installer: "cpanm"
            distribution: "strawberry"
          - perl: "5.6"
            os: "windows-latest"
            installer: "cpm"
            distribution: "strawberry"
          - perl: "5.6"
            os: "windows-latest"
            installer: "carton"
            distribution: "strawberry"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: use the action
        uses: ./
        with:
          perl-version: "${{ matrix.perl }}"
          install-modules-with: "${{ matrix.installer }}"
          install-modules-args: "--notest"
          working-directory: __test__/p5-Test-Module
      - name: print the version of Acme::this
        run: |
          # shellcheck disable=SC2016
          perl -MAcme::this -e 'print "$Acme::this::VERSION\n"'

      - run: ${{ matrix.installer }} --help
      - run: ${{ matrix.installer }} --version
